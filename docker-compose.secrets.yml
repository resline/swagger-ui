version: '3.8'

# Docker Compose configuration for secrets management
# Use this file with: docker-compose -f docker-compose.yml -f docker-compose.secrets.yml up

secrets:
  api_key:
    file: ./secrets/api_key.txt
  grafana_password:
    file: ./secrets/grafana_password.txt
  ssl_cert:
    file: ./secrets/ssl_cert.pem
  ssl_key:
    file: ./secrets/ssl_key.pem
  db_password:
    file: ./secrets/db_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt

services:
  swagger-ui:
    secrets:
      - api_key
      - ssl_cert
      - ssl_key
    environment:
      - API_KEY_FILE=/run/secrets/api_key
      - SSL_CERT_FILE=/run/secrets/ssl_cert
      - SSL_KEY_FILE=/run/secrets/ssl_key
    volumes:
      - type: tmpfs
        target: /run/secrets
        tmpfs:
          mode: 0600

  grafana:
    secrets:
      - grafana_password
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
    volumes:
      - type: tmpfs
        target: /run/secrets
        tmpfs:
          mode: 0600

  # Example database service with secrets
  postgres:
    image: postgres:15-alpine
    container_name: swagger-postgres
    restart: unless-stopped
    secrets:
      - db_password
    environment:
      - POSTGRES_DB=${DB_NAME:-swagger_ui}
      - POSTGRES_USER=${DB_USER:-swagger}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - type: tmpfs
        target: /run/secrets
        tmpfs:
          mode: 0600
    networks:
      - swagger-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-swagger}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres-data:
    driver: local